name: Build and test
on: [push]
jobs:
  # build-push:
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Clone.
  #     - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
  #     - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
  #     - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
  #     - name: Check out repository code
  #       uses: actions/checkout@v3
  #     - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
  #     - run: echo "üñ•Ô∏è The workflow is now ready to build your code on the runner."
  #     # Build.
  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v4
  #       with:
  #         # list of Docker images to use as base name for tags
  #         images: |
  #           demonihin/linkerd-multus-attach-operator
  #         # generate Docker tags based on the following events/attributes
  #         flavor: |
  #           latest=true
  #         tags: |
  #           type=schedule,enable=true
  #           type=ref,event=branch
  #           type=ref,event=pr
  #           type=semver,pattern={{version}}
  #           type=semver,pattern={{major}}.{{minor}}
  #           type=semver,pattern={{major}}
  #           type=sha
  #           type=raw,value={{date 'YYYYMMDD-HHmmss'}}
  #     - name: Login to DockerHub
  #       if: github.event_name != 'pull_request'
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: Build and push Docker images
  #       uses: docker/build-push-action@v3.0.0
  #       with:
  #         context: .
  #         push: ${{ github.event_name != 'pull_request' }}
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
  test-k3s:
    # needs: build-push

    # On ubuntu-latest (20.04) Multus fails to work even not with linkerd-cni injected pods:
    #
    #   Warning  FailedCreatePodSandBox  44s   kubelet            Failed to create pod sandbox: rpc error: code = Unknown desc = failed to setup network for sandbox "ff09bca66f
    # 3733c9eb0f176b80bf55a20285c70179c3a96dc2341f816c1ef2a5": plugin type="multus" name="multus-cni-network" failed (add): [linkerd-multus-attach-operator-system/linkerd-multu
    # s-operator-controller-manager-f9cbd8d69-pkmkr/3a8e6a25-0ac7-459a-8df3-25e596d95263:cbr0]: error adding container to network "cbr0": unsupported CNI result version "1.0.0"
    #   Warning  FailedCreatePodSandBox  29s   kubelet            Failed to create pod sandbox: rpc error: code = Unknown desc = failed to setup network for sandbox "8f755ddf74
    # 4665c71ab8103dc900ba5d670f96adc5051b1210b90ed0965223c0": plugin type="multus" name="multus-cni-network" failed (add): [linkerd-multus-attach-operator-system/linkerd-multu
    # s-operator-controller-manager-f9cbd8d69-pkmkr/3a8e6a25-0ac7-459a-8df3-25e596d95263:cbr0]: error adding container to network "cbr0": unsupported CNI result version "1.0.0"
    #   Warning  FailedCreatePodSandBox  14s   kubelet            Failed to create pod sandbox: rpc error: code = Unknown desc = failed to setup network for sandbox "9736b63765
    # c493901d9adf5eda14337ddf4860a7765b7fc38f021dcf5a737f7c": plugin type="multus" name="multus-cni-network" failed (add): [linkerd-multus-attach-operator-system/linkerd-multu
    # s-operator-controller-manager-f9cbd8d69-pkmkr/3a8e6a25-0ac7-459a-8df3-25e596d95263:cbr0]: error adding container to network "cbr0": unsupported CNI result version "1.0.0"
    #   Warning  FailedCreatePodSandBox  1s    kubelet            Failed to create pod sandbox: rpc error: code = Unknown desc = failed to setup network for sandbox "801520f269
    # a6143f9f8dc12d615f5c087be450d0e01db502334e6b08497f81f4": plugin type="multus" name="multus-cni-network" failed (add): [linkerd-multus-attach-operator-system/linkerd-multu
    # s-operator-controller-manager-f9cbd8d69-pkmkr/3a8e6a25-0ac7-459a-8df3-25e596d95263:cbr0]: error adding container to network "cbr0": unsupported CNI result version "1.0.0"
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

        # This causes Multus to fail with:
        ## Error: failed to generate container "0347a3376766dcc041d0a929e0c6498b70ccbef00d91acff3eee47932be2e0f6" spec: failed 
        ## to generate spec: path "/var/lib/rancher/k3s/data/current/bin" is mounted on "/var/lib/rancher/k3s" but it is not a shared mount
        # - uses: debianmaster/actions-k3s@master
        #   id: k3s
        #   with:
        #     version: 'v1.21.2-k3s1'

      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."

      - name: Run tests
        run: |
          source tests/environment.sh

          #sudo -E bash -eo pipefail tests/01-prepare-github-k3s.sh
          sudo -E bash -eo pipefail tests/01-prepare.sh
          # sudo -E bash -eo pipefail tests/02-annotations-handling.sh
          # sudo -E bash -eo pipefail tests/03-install-linkerd-control-plane.sh
          # sudo -E bash -eo pipefail tests/04-install-linkerd-viz.sh
          # sudo -E bash -eo pipefail tests/05-install-emojivoto.sh
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3

          
      
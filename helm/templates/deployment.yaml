apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "multus-attacher.fullname" . }}
  labels:
    {{- include "multus-attacher.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "multus-attacher.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        tls-certificate-issued-on: {{ now | date "20060102150405" | quote }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "multus-attacher.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "multus-attacher.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: {{ include "multus-attacher.fullname" . }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          args:
            - '-metrics-bind-address=:8080'
            - '-health-probe-bind-address=:8081'
            - '-webhook-port=9443'
            - '-leader-elect={{ .Values.controller.leaderElection }}'
            - '-cni-namespace={{ .Values.controller.cniNamespace }}'
            - '-cni-kubeconfig={{ .Values.controller.cniKubeconfigNodePath }}'
            - '-linkerd-namespace={{ .Values.controller.linkerdControlPlaneNamespace }}'
            - '-zap-log-level={{ .Values.controller.logLevel }}'
            - '-linkerd-proxy-uid-offset={{ .Values.controller.linkerdProxyUIDOffset | toString }}'
            - '-namespace-uid-range-annotation={{ .Values.controller.namespaceUIDRangeAnnotation }}'
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
            - name: health
              containerPort: 8081
              protocol: TCP
            - name: webhook
              containerPort: 9443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
# Default values for multus-attacher.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: demonihin/linkerd-multus-attach-operator
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  # runAsUser: 65535

service:
  type: ClusterIP

  webhookPort: 9443
  metricsPort: 8080
  healthPort: 8081

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

webhook:
  # Kubernetes webhook failure policy
  failurePolicy: Fail
  # Namespaces which will not be handled by the mutating webhook
  # By default, the system namespaces are included
  # as the Kubernetes control-plane should be able to start
  # even if the webhook is not available.
  # If you use Openshift, then the list of the namespaces must include
  # Openshift-specific namespaces.
  # The values are processed as Helm template.
  excludeNamespaces:
    - "kube-system"
    - "kube-public"
    - "kube-node-lease"
    - "{{ .Release.Namespace }}"

controller:
  leaderElection: true
  cniNamespace: "linkerd-cni"
  cniKubeconfigNodePath: "/etc/cni/net.d/ZZZ-linkerd-cni-kubeconfig"
  linkerdControlPlaneNamespace: "linkerd"

  logLevel: info
